'use strict';

/* eslint-env mocha */

var Connection = require('../dist/connection.js');
var chai = require('chai');
var expect = chai.expect;

describe('camelizer', function () {
  it('converts non-blacklisted keys and children', function () {
    var base = {
      test_leaf: 1,
      test_child: {
        convert_this: 2
      }
    };

    var camelized = Connection.camelize(base);
    expect(camelized.test_leaf).equals(undefined);
    expect(camelized.testLeaf).equals(1);
    expect(camelized.testChild.convert_this).equals(undefined);
    expect(camelized.testChild.convertThis).equals(2);
  });

  it('does not convert children of blacklisted keys', function () {
    var base = {
      test_leaf: 1,
      reference_data: {
        dont_convert: 2
      }
    };

    var camelized = Connection.camelize(base);
    expect(camelized.test_leaf).equals(undefined);
    expect(camelized.testLeaf).equals(1);
    expect(camelized.referenceData.dont_convert).equals(2);
    expect(camelized.referenceData.dontConvert).equals(undefined);
  });
});

describe('snakeizer', function () {
  it('converts non-blacklisted keys and children', function () {
    var base = {
      testLeaf: 1,
      testChild: {
        convertThis: 2
      }
    };

    var snakeized = Connection.snakeize(base);
    expect(snakeized.testLeaf).equals(undefined);
    expect(snakeized.test_leaf).equals(1);
    expect(snakeized.test_child.convertThis).equals(undefined);
    expect(snakeized.test_child.convert_this).equals(2);
  });

  it('does not convert children of blacklisted keys', function () {
    var base = {
      testLeaf: 1,
      referenceData: {
        dontConvert: 2
      }
    };

    var snakeized = Connection.snakeize(base);
    expect(snakeized.testLeaf).equals(undefined);
    expect(snakeized.test_leaf).equals(1);
    expect(snakeized.reference_data.dontConvert).equals(2);
    expect(snakeized.reference_data.dont_Convert).equals(undefined);
  });
});